buildscript {
    ext.exposed_version = '0.9.1'
    ext.kotlin_version = '1.2.21'
    ext.ktor_version = '0.9.1'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.msagi'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //dependency injection
    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'

    //ktor - netty based async app framework for Kotlin
    compile "io.ktor:ktor-server-jetty:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"

    //exposed - DSL based SQL framework for Kotlin
    compile "org.jetbrains.exposed:exposed:$exposed_version"

    //MySQL connector - JDBC layer between exposed and MySQL database
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.45'

    //logger
    compile "ch.qos.logback:logback-classic:1.2.1"

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // REST API unit testing framework
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.6'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}